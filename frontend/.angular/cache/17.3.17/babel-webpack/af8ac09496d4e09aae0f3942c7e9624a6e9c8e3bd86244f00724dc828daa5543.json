{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component, inject } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormBuilder, ReactiveFormsModule } from '@angular/forms';\nimport { GameService } from '../../core/services/game.service';\nimport { PickService } from '../../core/services/pick.service';\nlet PicksComponent = class PicksComponent {\n  constructor() {\n    this.gameService = inject(GameService);\n    this.pickService = inject(PickService);\n    this.fb = inject(FormBuilder);\n    this.loading = true;\n    this.error = '';\n    this.submitting = false;\n    this.games = [];\n    this.picks = [];\n    this.currentWeek = 1;\n    this.currentSeason = new Date().getFullYear();\n    this.picksForm = this.fb.group({});\n  }\n  get totalGames() {\n    return this.games.length;\n  }\n  get picksSubmitted() {\n    return this.games.filter(game => this.getPickValue(game.id)).length;\n  }\n  ngOnInit() {\n    this.loadData();\n  }\n  loadData() {\n    this.loading = true;\n    this.error = '';\n    // Load current week games\n    this.gameService.getCurrentWeekGames().subscribe({\n      next: response => {\n        this.games = response.games;\n        this.currentWeek = response.week;\n        this.currentSeason = response.season;\n        // Initialize form controls for each game\n        this.initializeFormControls();\n        // Load existing picks\n        this.loadExistingPicks();\n      },\n      error: error => {\n        console.error('Error loading games:', error);\n        this.error = 'Failed to load games. Please try again.';\n        this.loading = false;\n      }\n    });\n  }\n  initializeFormControls() {\n    const controls = {};\n    this.games.forEach(game => {\n      controls[`pick_${game.id}`] = [''];\n      if (game.isMonday) {\n        controls[`monday_${game.id}`] = [''];\n      }\n    });\n    this.picksForm = this.fb.group(controls);\n    // Auto-save on form changes\n    this.picksForm.valueChanges.subscribe(() => {\n      if (!this.loading) {\n        this.autoSavePicks();\n      }\n    });\n  }\n  loadExistingPicks() {\n    this.pickService.getUserPicks(this.currentWeek, this.currentSeason).subscribe({\n      next: response => {\n        this.picks = response.picks;\n        // Populate form with existing picks\n        this.picks.forEach(pick => {\n          this.picksForm.patchValue({\n            [`pick_${pick.gameId}`]: pick.selectedTeamId,\n            [`monday_${pick.gameId}`]: pick.mondayNightPrediction || ''\n          });\n        });\n        this.loading = false;\n      },\n      error: error => {\n        console.error('Error loading picks:', error);\n        this.loading = false;\n      }\n    });\n  }\n  getPickValue(gameId) {\n    return this.picksForm.get(`pick_${gameId}`)?.value || null;\n  }\n  getMondayPrediction(gameId) {\n    const value = this.picksForm.get(`monday_${gameId}`)?.value;\n    return value ? parseInt(value) : null;\n  }\n  isGameLocked(game) {\n    const gameTime = new Date(game.date);\n    const now = new Date();\n    return gameTime <= now || game.status !== 'scheduled';\n  }\n  allGamesLocked() {\n    return this.games.every(game => this.isGameLocked(game));\n  }\n  formatGameTime(dateString) {\n    const date = new Date(dateString);\n    return date.toLocaleDateString('en-US', {\n      weekday: 'short',\n      month: 'short',\n      day: 'numeric',\n      hour: 'numeric',\n      minute: '2-digit',\n      timeZoneName: 'short'\n    });\n  }\n  autoSavePicks() {\n    // Save picks automatically with debounce\n    setTimeout(() => {\n      this.saveChangedPicks();\n    }, 1000);\n  }\n  saveChangedPicks() {\n    this.games.forEach(game => {\n      const selectedTeamId = this.getPickValue(game.id);\n      const mondayPrediction = this.getMondayPrediction(game.id);\n      if (selectedTeamId && !this.isGameLocked(game)) {\n        const existingPick = this.picks.find(p => p.gameId === game.id);\n        // Only save if changed or new\n        if (!existingPick || existingPick.selectedTeamId !== selectedTeamId || existingPick.mondayNightPrediction !== mondayPrediction) {\n          this.pickService.submitPick({\n            gameId: game.id,\n            selectedTeamId: selectedTeamId,\n            mondayNightPrediction: mondayPrediction || undefined\n          }).subscribe({\n            next: () => {\n              // Update local picks array\n              const pickIndex = this.picks.findIndex(p => p.gameId === game.id);\n              if (pickIndex >= 0) {\n                this.picks[pickIndex].selectedTeamId = selectedTeamId;\n                this.picks[pickIndex].mondayNightPrediction = mondayPrediction || undefined;\n              } else {\n                this.picks.push({\n                  gameId: game.id,\n                  selectedTeamId: selectedTeamId,\n                  mondayNightPrediction: mondayPrediction || undefined\n                });\n              }\n            },\n            error: error => {\n              console.error('Error saving pick:', error);\n            }\n          });\n        }\n      }\n    });\n  }\n  submitPicks() {\n    this.submitting = true;\n    this.saveChangedPicks();\n    // Show confirmation message\n    setTimeout(() => {\n      this.submitting = false;\n    }, 1000);\n  }\n};\nPicksComponent = __decorate([Component({\n  selector: 'app-picks',\n  standalone: true,\n  imports: [CommonModule, ReactiveFormsModule],\n  template: `\n    <div class=\"min-h-screen bg-gray-50\">\n      <!-- Navigation Header -->\n      <div class=\"bg-white shadow\">\n        <div class=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8\">\n          <div class=\"flex justify-between items-center py-6\">\n            <div>\n              <h1 class=\"text-3xl font-bold text-gray-900\">My Picks</h1>\n              <p class=\"mt-1 text-sm text-gray-500\">Week {{ currentWeek }}, {{ currentSeason }}</p>\n            </div>\n            <div class=\"text-right\">\n              <div class=\"text-2xl font-bold text-blue-600\">{{ picksSubmitted }}/{{ totalGames }}</div>\n              <div class=\"text-sm text-gray-500\">Picks Submitted</div>\n            </div>\n          </div>\n        </div>\n      </div>\n\n      <!-- Content -->\n      <div class=\"max-w-7xl mx-auto py-6 sm:px-6 lg:px-8\">\n        <div class=\"px-4 py-6 sm:px-0\">\n          \n          <!-- Loading State -->\n          <div *ngIf=\"loading\" class=\"text-center\">\n            <div class=\"inline-block animate-spin rounded-full h-8 w-8 border-b-2 border-blue-600\"></div>\n            <p class=\"mt-2 text-gray-600\">Loading games...</p>\n          </div>\n\n          <!-- Error State -->\n          <div *ngIf=\"error\" class=\"bg-red-50 border border-red-200 rounded-lg p-4 mb-6\">\n            <p class=\"text-red-800\">{{ error }}</p>\n            <button (click)=\"loadData()\" class=\"mt-2 btn-primary\">Try Again</button>\n          </div>\n\n          <!-- Games Grid -->\n          <div *ngIf=\"!loading && !error\" class=\"space-y-6\">\n            <!-- Instructions -->\n            <div class=\"bg-blue-50 border border-blue-200 rounded-lg p-4\">\n              <h3 class=\"font-semibold text-blue-900\">How to Make Picks</h3>\n              <ul class=\"mt-2 text-sm text-blue-800 space-y-1\">\n                <li>â€¢ Select the team you think will win each game</li>\n                <li>â€¢ Picks are locked once games start</li>\n                <li>â€¢ For Monday Night games, predict the total combined score</li>\n                <li>â€¢ Get all picks right for +3 bonus points!</li>\n              </ul>\n            </div>\n\n            <!-- Games -->\n            <form [formGroup]=\"picksForm\" (ngSubmit)=\"submitPicks()\">\n              <div class=\"grid gap-6 md:grid-cols-2 lg:grid-cols-3\">\n                <div *ngFor=\"let game of games\" class=\"card p-6\">\n                  <!-- Game Header -->\n                  <div class=\"text-center mb-4\">\n                    <div class=\"text-sm text-gray-500\">\n                      {{ formatGameTime(game.date) }}\n                    </div>\n                    <div *ngIf=\"isGameLocked(game)\" class=\"mt-1\">\n                      <span class=\"inline-flex items-center px-2 py-1 rounded-full text-xs font-medium bg-red-100 text-red-800\">\n                        ðŸ”’ Locked\n                      </span>\n                    </div>\n                    <div *ngIf=\"game.isMonday\" class=\"mt-1\">\n                      <span class=\"inline-flex items-center px-2 py-1 rounded-full text-xs font-medium bg-purple-100 text-purple-800\">\n                        Monday Night\n                      </span>\n                    </div>\n                  </div>\n\n                  <!-- Teams -->\n                  <div class=\"space-y-3\">\n                    <!-- Visitor Team -->\n                    <label class=\"flex items-center space-x-3 cursor-pointer p-2 rounded-lg hover:bg-gray-50\" \n                           [class.bg-blue-50]=\"getPickValue(game.id) === game.visitorTeam.id\"\n                           [class.border-2]=\"getPickValue(game.id) === game.visitorTeam.id\"\n                           [class.border-blue-500]=\"getPickValue(game.id) === game.visitorTeam.id\">\n                      <input\n                        type=\"radio\"\n                        [value]=\"game.visitorTeam.id\"\n                        [formControlName]=\"'pick_' + game.id\"\n                        [disabled]=\"isGameLocked(game)\"\n                        class=\"text-blue-600 focus:ring-blue-500\">\n                      <div class=\"flex items-center space-x-3 flex-1\">\n                        <img *ngIf=\"game.visitorTeam.logo\" \n                             [src]=\"game.visitorTeam.logo\" \n                             [alt]=\"game.visitorTeam.name\"\n                             class=\"w-8 h-8 object-contain\">\n                        <div class=\"flex-1\">\n                          <div class=\"font-medium\">{{ game.visitorTeam.city }} {{ game.visitorTeam.name }}</div>\n                          <div class=\"text-sm text-gray-500\">@ {{ game.homeTeam.abbreviation }}</div>\n                        </div>\n                        <div *ngIf=\"game.visitorTeam.score !== undefined\" class=\"text-lg font-bold\">\n                          {{ game.visitorTeam.score }}\n                        </div>\n                      </div>\n                    </label>\n\n                    <!-- Home Team -->\n                    <label class=\"flex items-center space-x-3 cursor-pointer p-2 rounded-lg hover:bg-gray-50\"\n                           [class.bg-blue-50]=\"getPickValue(game.id) === game.homeTeam.id\"\n                           [class.border-2]=\"getPickValue(game.id) === game.homeTeam.id\"\n                           [class.border-blue-500]=\"getPickValue(game.id) === game.homeTeam.id\">\n                      <input\n                        type=\"radio\"\n                        [value]=\"game.homeTeam.id\"\n                        [formControlName]=\"'pick_' + game.id\"\n                        [disabled]=\"isGameLocked(game)\"\n                        class=\"text-blue-600 focus:ring-blue-500\">\n                      <div class=\"flex items-center space-x-3 flex-1\">\n                        <img *ngIf=\"game.homeTeam.logo\" \n                             [src]=\"game.homeTeam.logo\" \n                             [alt]=\"game.homeTeam.name\"\n                             class=\"w-8 h-8 object-contain\">\n                        <div class=\"flex-1\">\n                          <div class=\"font-medium\">{{ game.homeTeam.city }} {{ game.homeTeam.name }}</div>\n                          <div class=\"text-sm text-gray-500\">vs {{ game.visitorTeam.abbreviation }}</div>\n                        </div>\n                        <div *ngIf=\"game.homeTeam.score !== undefined\" class=\"text-lg font-bold\">\n                          {{ game.homeTeam.score }}\n                        </div>\n                      </div>\n                    </label>\n                  </div>\n\n                  <!-- Monday Night Prediction -->\n                  <div *ngIf=\"game.isMonday\" class=\"mt-4 pt-4 border-t border-gray-200\">\n                    <label class=\"block text-sm font-medium text-gray-700 mb-2\">\n                      Total Score Prediction (Tie-breaker)\n                    </label>\n                    <input\n                      type=\"number\"\n                      [formControlName]=\"'monday_' + game.id\"\n                      [disabled]=\"isGameLocked(game)\"\n                      placeholder=\"e.g., 45\"\n                      min=\"0\"\n                      max=\"100\"\n                      class=\"input-field\">\n                  </div>\n\n                  <!-- Pick Status -->\n                  <div class=\"mt-4 text-center\">\n                    <div *ngIf=\"getPickValue(game.id)\" class=\"text-sm text-green-600\">\n                      âœ“ Pick submitted\n                    </div>\n                    <div *ngIf=\"!getPickValue(game.id) && !isGameLocked(game)\" class=\"text-sm text-gray-500\">\n                      Select a team\n                    </div>\n                  </div>\n                </div>\n              </div>\n\n              <!-- Submit Button -->\n              <div class=\"mt-8 text-center\" *ngIf=\"!allGamesLocked()\">\n                <button\n                  type=\"submit\"\n                  [disabled]=\"submitting\"\n                  class=\"btn-primary px-8 py-3 text-lg\">\n                  {{ submitting ? 'Saving...' : 'Save Picks' }}\n                </button>\n                <p class=\"mt-2 text-sm text-gray-600\">\n                  Picks are automatically saved as you make them\n                </p>\n              </div>\n            </form>\n\n            <!-- All Games Locked Message -->\n            <div *ngIf=\"allGamesLocked()\" class=\"text-center py-8\">\n              <div class=\"text-6xl mb-4\">ðŸ”’</div>\n              <h3 class=\"text-lg font-medium text-gray-900\">All Games Have Started</h3>\n              <p class=\"text-gray-600\">Picks are now locked for this week</p>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  `,\n  styles: []\n})], PicksComponent);\nexport { PicksComponent };","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}