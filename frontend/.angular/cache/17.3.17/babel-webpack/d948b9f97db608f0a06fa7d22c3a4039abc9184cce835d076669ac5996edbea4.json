{"ast":null,"code":"import { inject } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { AuthService } from '../services/auth.service';\nimport { map, take } from 'rxjs/operators';\nexport const AuthGuard = (route, state) => {\n  const authService = inject(AuthService);\n  const router = inject(Router);\n  // Check if we have a token first\n  if (!authService.isAuthenticated) {\n    router.navigate(['/auth']);\n    return false;\n  }\n  // If we have a token but no current user, wait for the user to be loaded\n  return authService.currentUser$.pipe(take(1), map(user => {\n    if (user !== null || authService.isAuthenticated) {\n      return true;\n    }\n    router.navigate(['/auth']);\n    return false;\n  }));\n};","map":{"version":3,"names":["inject","Router","AuthService","map","take","AuthGuard","route","state","authService","router","isAuthenticated","navigate","currentUser$","pipe","user"],"sources":["C:\\Users\\juanm\\source\\football_pool\\frontend\\src\\app\\core\\guards\\auth.guard.ts"],"sourcesContent":["import { inject } from '@angular/core';\r\nimport { CanActivateFn, Router } from '@angular/router';\r\nimport { AuthService } from '../services/auth.service';\r\nimport { map, take } from 'rxjs/operators';\r\n\r\nexport const AuthGuard: CanActivateFn = (route, state) => {\r\n  const authService = inject(AuthService);\r\n  const router = inject(Router);\r\n\r\n  // Check if we have a token first\r\n  if (!authService.isAuthenticated) {\r\n    router.navigate(['/auth']);\r\n    return false;\r\n  }\r\n\r\n  // If we have a token but no current user, wait for the user to be loaded\r\n  return authService.currentUser$.pipe(\r\n    take(1),\r\n    map(user => {\r\n      if (user !== null || authService.isAuthenticated) {\r\n        return true;\r\n      }\r\n      \r\n      router.navigate(['/auth']);\r\n      return false;\r\n    })\r\n  );\r\n};\r\n"],"mappings":"AAAA,SAASA,MAAM,QAAQ,eAAe;AACtC,SAAwBC,MAAM,QAAQ,iBAAiB;AACvD,SAASC,WAAW,QAAQ,0BAA0B;AACtD,SAASC,GAAG,EAAEC,IAAI,QAAQ,gBAAgB;AAE1C,OAAO,MAAMC,SAAS,GAAkBA,CAACC,KAAK,EAAEC,KAAK,KAAI;EACvD,MAAMC,WAAW,GAAGR,MAAM,CAACE,WAAW,CAAC;EACvC,MAAMO,MAAM,GAAGT,MAAM,CAACC,MAAM,CAAC;EAE7B;EACA,IAAI,CAACO,WAAW,CAACE,eAAe,EAAE;IAChCD,MAAM,CAACE,QAAQ,CAAC,CAAC,OAAO,CAAC,CAAC;IAC1B,OAAO,KAAK;;EAGd;EACA,OAAOH,WAAW,CAACI,YAAY,CAACC,IAAI,CAClCT,IAAI,CAAC,CAAC,CAAC,EACPD,GAAG,CAACW,IAAI,IAAG;IACT,IAAIA,IAAI,KAAK,IAAI,IAAIN,WAAW,CAACE,eAAe,EAAE;MAChD,OAAO,IAAI;;IAGbD,MAAM,CAACE,QAAQ,CAAC,CAAC,OAAO,CAAC,CAAC;IAC1B,OAAO,KAAK;EACd,CAAC,CAAC,CACH;AACH,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}