{"ast":null,"code":"import { environment } from '../../../environments/environment';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class LeaderboardService {\n  constructor(http) {\n    this.http = http;\n  }\n  getWeeklyLeaderboard(week, season) {\n    const params = {};\n    if (week) params.week = week.toString();\n    if (season) params.season = season.toString();\n    return this.http.get(`${environment.apiUrl}/leaderboard/weekly`, {\n      params\n    });\n  }\n  getSeasonLeaderboard(season) {\n    const params = {};\n    if (season) params.season = season.toString();\n    return this.http.get(`${environment.apiUrl}/leaderboard/season`, {\n      params\n    });\n  }\n  getWeeklyWinners(limit = 10) {\n    return this.http.get(`${environment.apiUrl}/leaderboard/winners`, {\n      params: {\n        limit: limit.toString()\n      }\n    });\n  }\n  getUserStats(season) {\n    const params = {};\n    if (season) params.season = season.toString();\n    return this.http.get(`${environment.apiUrl}/leaderboard/stats`, {\n      params\n    });\n  }\n  static {\n    this.ɵfac = function LeaderboardService_Factory(t) {\n      return new (t || LeaderboardService)(i0.ɵɵinject(i1.HttpClient));\n    };\n  }\n  static {\n    this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n      token: LeaderboardService,\n      factory: LeaderboardService.ɵfac,\n      providedIn: 'root'\n    });\n  }\n}","map":{"version":3,"names":["environment","LeaderboardService","constructor","http","getWeeklyLeaderboard","week","season","params","toString","get","apiUrl","getSeasonLeaderboard","getWeeklyWinners","limit","getUserStats","i0","ɵɵinject","i1","HttpClient","factory","ɵfac","providedIn"],"sources":["C:\\Users\\juanm\\source\\football_pool\\frontend\\src\\app\\core\\services\\leaderboard.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\nimport { environment } from '../../../environments/environment';\r\nimport {\r\n  WeeklyLeaderboardResponse,\r\n  SeasonLeaderboardResponse,\r\n  WeeklyWinner,\r\n  UserStats\r\n} from '../models/leaderboard.model';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class LeaderboardService {\r\n  constructor(private http: HttpClient) {}\r\n\r\n  getWeeklyLeaderboard(week?: number, season?: number): Observable<WeeklyLeaderboardResponse> {\r\n    const params: any = {};\r\n    if (week) params.week = week.toString();\r\n    if (season) params.season = season.toString();\r\n\r\n    return this.http.get<WeeklyLeaderboardResponse>(`${environment.apiUrl}/leaderboard/weekly`, { params });\r\n  }\r\n\r\n  getSeasonLeaderboard(season?: number): Observable<SeasonLeaderboardResponse> {\r\n    const params: any = {};\r\n    if (season) params.season = season.toString();\r\n\r\n    return this.http.get<SeasonLeaderboardResponse>(`${environment.apiUrl}/leaderboard/season`, { params });\r\n  }\r\n\r\n  getWeeklyWinners(limit = 10): Observable<{ winners: WeeklyWinner[] }> {\r\n    return this.http.get<{ winners: WeeklyWinner[] }>(`${environment.apiUrl}/leaderboard/winners`, {\r\n      params: { limit: limit.toString() }\r\n    });\r\n  }\r\n\r\n  getUserStats(season?: number): Observable<UserStats> {\r\n    const params: any = {};\r\n    if (season) params.season = season.toString();\r\n\r\n    return this.http.get<UserStats>(`${environment.apiUrl}/leaderboard/stats`, { params });\r\n  }\r\n}\r\n"],"mappings":"AAGA,SAASA,WAAW,QAAQ,mCAAmC;;;AAW/D,OAAM,MAAOC,kBAAkB;EAC7BC,YAAoBC,IAAgB;IAAhB,KAAAA,IAAI,GAAJA,IAAI;EAAe;EAEvCC,oBAAoBA,CAACC,IAAa,EAAEC,MAAe;IACjD,MAAMC,MAAM,GAAQ,EAAE;IACtB,IAAIF,IAAI,EAAEE,MAAM,CAACF,IAAI,GAAGA,IAAI,CAACG,QAAQ,EAAE;IACvC,IAAIF,MAAM,EAAEC,MAAM,CAACD,MAAM,GAAGA,MAAM,CAACE,QAAQ,EAAE;IAE7C,OAAO,IAAI,CAACL,IAAI,CAACM,GAAG,CAA4B,GAAGT,WAAW,CAACU,MAAM,qBAAqB,EAAE;MAAEH;IAAM,CAAE,CAAC;EACzG;EAEAI,oBAAoBA,CAACL,MAAe;IAClC,MAAMC,MAAM,GAAQ,EAAE;IACtB,IAAID,MAAM,EAAEC,MAAM,CAACD,MAAM,GAAGA,MAAM,CAACE,QAAQ,EAAE;IAE7C,OAAO,IAAI,CAACL,IAAI,CAACM,GAAG,CAA4B,GAAGT,WAAW,CAACU,MAAM,qBAAqB,EAAE;MAAEH;IAAM,CAAE,CAAC;EACzG;EAEAK,gBAAgBA,CAACC,KAAK,GAAG,EAAE;IACzB,OAAO,IAAI,CAACV,IAAI,CAACM,GAAG,CAA8B,GAAGT,WAAW,CAACU,MAAM,sBAAsB,EAAE;MAC7FH,MAAM,EAAE;QAAEM,KAAK,EAAEA,KAAK,CAACL,QAAQ;MAAE;KAClC,CAAC;EACJ;EAEAM,YAAYA,CAACR,MAAe;IAC1B,MAAMC,MAAM,GAAQ,EAAE;IACtB,IAAID,MAAM,EAAEC,MAAM,CAACD,MAAM,GAAGA,MAAM,CAACE,QAAQ,EAAE;IAE7C,OAAO,IAAI,CAACL,IAAI,CAACM,GAAG,CAAY,GAAGT,WAAW,CAACU,MAAM,oBAAoB,EAAE;MAAEH;IAAM,CAAE,CAAC;EACxF;;;uBA7BWN,kBAAkB,EAAAc,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,UAAA;IAAA;EAAA;;;aAAlBjB,kBAAkB;MAAAkB,OAAA,EAAlBlB,kBAAkB,CAAAmB,IAAA;MAAAC,UAAA,EAFjB;IAAM;EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}