{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component, inject } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormBuilder, ReactiveFormsModule } from '@angular/forms';\nimport { GameService } from '../../core/services/game.service';\nimport { PickService } from '../../core/services/pick.service';\nlet PicksComponent = class PicksComponent {\n  constructor() {\n    this.gameService = inject(GameService);\n    this.pickService = inject(PickService);\n    this.fb = inject(FormBuilder);\n    this.loading = true;\n    this.error = '';\n    this.submitting = false;\n    this.games = [];\n    this.picks = [];\n    this.currentWeek = 1;\n    this.currentSeason = new Date().getFullYear();\n    this.picksForm = this.fb.group({});\n  }\n  get totalGames() {\n    return this.games.length;\n  }\n  get picksSubmitted() {\n    return this.games.filter(game => this.getPickValue(game.id)).length;\n  }\n  ngOnInit() {\n    this.loadData();\n  }\n  loadData() {\n    this.loading = true;\n    this.error = '';\n    // Load current week games\n    this.gameService.getCurrentWeekGames().subscribe({\n      next: response => {\n        this.games = response.games;\n        this.currentWeek = response.week;\n        this.currentSeason = response.season;\n        // Initialize form controls for each game\n        this.initializeFormControls();\n        // Load existing picks\n        this.loadExistingPicks();\n      },\n      error: error => {\n        console.error('Error loading games:', error);\n        this.error = 'Failed to load games. Please try again.';\n        this.loading = false;\n      }\n    });\n  }\n  initializeFormControls() {\n    const controls = {};\n    this.games.forEach(game => {\n      controls[`pick_${game.id}`] = [''];\n      if (game.isMonday) {\n        controls[`monday_${game.id}`] = [''];\n      }\n    });\n    this.picksForm = this.fb.group(controls);\n    // Auto-save on form changes\n    this.picksForm.valueChanges.subscribe(() => {\n      if (!this.loading) {\n        this.autoSavePicks();\n      }\n    });\n  }\n  loadExistingPicks() {\n    this.pickService.getUserPicks(this.currentWeek, this.currentSeason).subscribe({\n      next: response => {\n        this.picks = response.picks;\n        // Populate form with existing picks\n        this.picks.forEach(pick => {\n          this.picksForm.patchValue({\n            [`pick_${pick.gameId}`]: pick.selectedTeamId,\n            [`monday_${pick.gameId}`]: pick.mondayNightPrediction || ''\n          });\n        });\n        this.loading = false;\n      },\n      error: error => {\n        console.error('Error loading picks:', error);\n        this.loading = false;\n      }\n    });\n  }\n  getPickValue(gameId) {\n    return this.picksForm.get(`pick_${gameId}`)?.value || null;\n  }\n  getMondayPrediction(gameId) {\n    const value = this.picksForm.get(`monday_${gameId}`)?.value;\n    return value ? parseInt(value) : null;\n  }\n  isGameLocked(game) {\n    const gameTime = new Date(game.date);\n    const now = new Date();\n    return gameTime <= now || game.status !== 'scheduled';\n  }\n  allGamesLocked() {\n    return this.games.every(game => this.isGameLocked(game));\n  }\n  formatGameTime(dateString) {\n    const date = new Date(dateString);\n    return date.toLocaleDateString('en-US', {\n      weekday: 'short',\n      month: 'short',\n      day: 'numeric',\n      hour: 'numeric',\n      minute: '2-digit',\n      timeZoneName: 'short'\n    });\n  }\n  autoSavePicks() {\n    // Save picks automatically with debounce\n    setTimeout(() => {\n      this.saveChangedPicks();\n    }, 1000);\n  }\n  saveChangedPicks() {\n    this.games.forEach(game => {\n      const selectedTeamId = this.getPickValue(game.id);\n      const mondayPrediction = this.getMondayPrediction(game.id);\n      if (selectedTeamId && !this.isGameLocked(game)) {\n        const existingPick = this.picks.find(p => p.gameId === game.id);\n        // Only save if changed or new\n        if (!existingPick || existingPick.selectedTeamId !== selectedTeamId || existingPick.mondayNightPrediction !== mondayPrediction) {\n          this.pickService.submitPick({\n            gameId: game.id,\n            selectedTeamId: selectedTeamId,\n            mondayNightPrediction: mondayPrediction\n          }).subscribe({\n            next: () => {\n              // Update local picks array\n              const pickIndex = this.picks.findIndex(p => p.gameId === game.id);\n              if (pickIndex >= 0) {\n                this.picks[pickIndex].selectedTeamId = selectedTeamId;\n                this.picks[pickIndex].mondayNightPrediction = mondayPrediction;\n              } else {\n                this.picks.push({\n                  gameId: game.id,\n                  selectedTeamId: selectedTeamId,\n                  mondayNightPrediction: mondayPrediction\n                });\n              }\n            },\n            error: error => {\n              console.error('Error saving pick:', error);\n            }\n          });\n        }\n      }\n    });\n  }\n  submitPicks() {\n    this.submitting = true;\n    this.saveChangedPicks();\n    // Show confirmation message\n    setTimeout(() => {\n      this.submitting = false;\n    }, 1000);\n  }\n};\nPicksComponent = __decorate([Component({\n  selector: 'app-picks',\n  standalone: true,\n  imports: [CommonModule, ReactiveFormsModule],\n  template: `\n    <div class=\"min-h-screen bg-gray-50\">\n      <!-- Navigation Header -->\n      <div class=\"bg-white shadow\">\n        <div class=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8\">\n          <div class=\"flex justify-between items-center py-6\">\n            <div>\n              <h1 class=\"text-3xl font-bold text-gray-900\">My Picks</h1>\n              <p class=\"mt-1 text-sm text-gray-500\">Week {{ currentWeek }}, {{ currentSeason }}</p>\n            </div>\n            <div class=\"text-right\">\n              <div class=\"text-2xl font-bold text-blue-600\">{{ picksSubmitted }}/{{ totalGames }}</div>\n              <div class=\"text-sm text-gray-500\">Picks Submitted</div>\n            </div>\n          </div>\n        </div>\n      </div>\n\n      <!-- Content -->\n      <div class=\"max-w-7xl mx-auto py-6 sm:px-6 lg:px-8\">\n        <div class=\"px-4 py-6 sm:px-0\">\n          \n          <!-- Loading State -->\n          <div *ngIf=\"loading\" class=\"text-center\">\n            <div class=\"inline-block animate-spin rounded-full h-8 w-8 border-b-2 border-blue-600\"></div>\n            <p class=\"mt-2 text-gray-600\">Loading games...</p>\n          </div>\n\n          <!-- Error State -->\n          <div *ngIf=\"error\" class=\"bg-red-50 border border-red-200 rounded-lg p-4 mb-6\">\n            <p class=\"text-red-800\">{{ error }}</p>\n            <button (click)=\"loadData()\" class=\"mt-2 btn-primary\">Try Again</button>\n          </div>\n\n          <!-- Games Grid -->\n          <div *ngIf=\"!loading && !error\" class=\"space-y-6\">\n            <!-- Instructions -->\n            <div class=\"bg-blue-50 border border-blue-200 rounded-lg p-4\">\n              <h3 class=\"font-semibold text-blue-900\">How to Make Picks</h3>\n              <ul class=\"mt-2 text-sm text-blue-800 space-y-1\">\n                <li>â€¢ Select the team you think will win each game</li>\n                <li>â€¢ Picks are locked once games start</li>\n                <li>â€¢ For Monday Night games, predict the total combined score</li>\n                <li>â€¢ Get all picks right for +3 bonus points!</li>\n              </ul>\n            </div>\n\n            <!-- Games -->\n            <form [formGroup]=\"picksForm\" (ngSubmit)=\"submitPicks()\">\n              <div class=\"grid gap-6 md:grid-cols-2 lg:grid-cols-3\">\n                <div *ngFor=\"let game of games\" class=\"card p-6\">\n                  <!-- Game Header -->\n                  <div class=\"text-center mb-4\">\n                    <div class=\"text-sm text-gray-500\">\n                      {{ formatGameTime(game.date) }}\n                    </div>\n                    <div *ngIf=\"isGameLocked(game)\" class=\"mt-1\">\n                      <span class=\"inline-flex items-center px-2 py-1 rounded-full text-xs font-medium bg-red-100 text-red-800\">\n                        ðŸ”’ Locked\n                      </span>\n                    </div>\n                    <div *ngIf=\"game.isMonday\" class=\"mt-1\">\n                      <span class=\"inline-flex items-center px-2 py-1 rounded-full text-xs font-medium bg-purple-100 text-purple-800\">\n                        Monday Night\n                      </span>\n                    </div>\n                  </div>\n\n                  <!-- Teams -->\n                  <div class=\"space-y-3\">\n                    <!-- Visitor Team -->\n                    <label class=\"flex items-center space-x-3 cursor-pointer p-2 rounded-lg hover:bg-gray-50\" \n                           [class.bg-blue-50]=\"getPickValue(game.id) === game.visitorTeam.id\"\n                           [class.border-2]=\"getPickValue(game.id) === game.visitorTeam.id\"\n                           [class.border-blue-500]=\"getPickValue(game.id) === game.visitorTeam.id\">\n                      <input\n                        type=\"radio\"\n                        [value]=\"game.visitorTeam.id\"\n                        [formControlName]=\"'pick_' + game.id\"\n                        [disabled]=\"isGameLocked(game)\"\n                        class=\"text-blue-600 focus:ring-blue-500\">\n                      <div class=\"flex items-center space-x-3 flex-1\">\n                        <img *ngIf=\"game.visitorTeam.logo\" \n                             [src]=\"game.visitorTeam.logo\" \n                             [alt]=\"game.visitorTeam.name\"\n                             class=\"w-8 h-8 object-contain\">\n                        <div class=\"flex-1\">\n                          <div class=\"font-medium\">{{ game.visitorTeam.city }} {{ game.visitorTeam.name }}</div>\n                          <div class=\"text-sm text-gray-500\">@ {{ game.homeTeam.abbreviation }}</div>\n                        </div>\n                        <div *ngIf=\"game.visitorTeam.score !== undefined\" class=\"text-lg font-bold\">\n                          {{ game.visitorTeam.score }}\n                        </div>\n                      </div>\n                    </label>\n\n                    <!-- Home Team -->\n                    <label class=\"flex items-center space-x-3 cursor-pointer p-2 rounded-lg hover:bg-gray-50\"\n                           [class.bg-blue-50]=\"getPickValue(game.id) === game.homeTeam.id\"\n                           [class.border-2]=\"getPickValue(game.id) === game.homeTeam.id\"\n                           [class.border-blue-500]=\"getPickValue(game.id) === game.homeTeam.id\">\n                      <input\n                        type=\"radio\"\n                        [value]=\"game.homeTeam.id\"\n                        [formControlName]=\"'pick_' + game.id\"\n                        [disabled]=\"isGameLocked(game)\"\n                        class=\"text-blue-600 focus:ring-blue-500\">\n                      <div class=\"flex items-center space-x-3 flex-1\">\n                        <img *ngIf=\"game.homeTeam.logo\" \n                             [src]=\"game.homeTeam.logo\" \n                             [alt]=\"game.homeTeam.name\"\n                             class=\"w-8 h-8 object-contain\">\n                        <div class=\"flex-1\">\n                          <div class=\"font-medium\">{{ game.homeTeam.city }} {{ game.homeTeam.name }}</div>\n                          <div class=\"text-sm text-gray-500\">vs {{ game.visitorTeam.abbreviation }}</div>\n                        </div>\n                        <div *ngIf=\"game.homeTeam.score !== undefined\" class=\"text-lg font-bold\">\n                          {{ game.homeTeam.score }}\n                        </div>\n                      </div>\n                    </label>\n                  </div>\n\n                  <!-- Monday Night Prediction -->\n                  <div *ngIf=\"game.isMonday\" class=\"mt-4 pt-4 border-t border-gray-200\">\n                    <label class=\"block text-sm font-medium text-gray-700 mb-2\">\n                      Total Score Prediction (Tie-breaker)\n                    </label>\n                    <input\n                      type=\"number\"\n                      [formControlName]=\"'monday_' + game.id\"\n                      [disabled]=\"isGameLocked(game)\"\n                      placeholder=\"e.g., 45\"\n                      min=\"0\"\n                      max=\"100\"\n                      class=\"input-field\">\n                  </div>\n\n                  <!-- Pick Status -->\n                  <div class=\"mt-4 text-center\">\n                    <div *ngIf=\"getPickValue(game.id)\" class=\"text-sm text-green-600\">\n                      âœ“ Pick submitted\n                    </div>\n                    <div *ngIf=\"!getPickValue(game.id) && !isGameLocked(game)\" class=\"text-sm text-gray-500\">\n                      Select a team\n                    </div>\n                  </div>\n                </div>\n              </div>\n\n              <!-- Submit Button -->\n              <div class=\"mt-8 text-center\" *ngIf=\"!allGamesLocked()\">\n                <button\n                  type=\"submit\"\n                  [disabled]=\"submitting\"\n                  class=\"btn-primary px-8 py-3 text-lg\">\n                  {{ submitting ? 'Saving...' : 'Save Picks' }}\n                </button>\n                <p class=\"mt-2 text-sm text-gray-600\">\n                  Picks are automatically saved as you make them\n                </p>\n              </div>\n            </form>\n\n            <!-- All Games Locked Message -->\n            <div *ngIf=\"allGamesLocked()\" class=\"text-center py-8\">\n              <div class=\"text-6xl mb-4\">ðŸ”’</div>\n              <h3 class=\"text-lg font-medium text-gray-900\">All Games Have Started</h3>\n              <p class=\"text-gray-600\">Picks are now locked for this week</p>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  `,\n  styles: []\n})], PicksComponent);\nexport { PicksComponent };","map":{"version":3,"names":["Component","inject","CommonModule","FormBuilder","ReactiveFormsModule","GameService","PickService","PicksComponent","constructor","gameService","pickService","fb","loading","error","submitting","games","picks","currentWeek","currentSeason","Date","getFullYear","picksForm","group","totalGames","length","picksSubmitted","filter","game","getPickValue","id","ngOnInit","loadData","getCurrentWeekGames","subscribe","next","response","week","season","initializeFormControls","loadExistingPicks","console","controls","forEach","isMonday","valueChanges","autoSavePicks","getUserPicks","pick","patchValue","gameId","selectedTeamId","mondayNightPrediction","get","value","getMondayPrediction","parseInt","isGameLocked","gameTime","date","now","status","allGamesLocked","every","formatGameTime","dateString","toLocaleDateString","weekday","month","day","hour","minute","timeZoneName","setTimeout","saveChangedPicks","mondayPrediction","existingPick","find","p","submitPick","pickIndex","findIndex","push","submitPicks","__decorate","selector","standalone","imports","template","styles"],"sources":["C:\\Users\\juanm\\source\\football_pool\\frontend\\src\\app\\features\\picks\\picks.component.ts"],"sourcesContent":["import { Component, OnInit, inject } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { FormBuilder, FormGroup, ReactiveFormsModule } from '@angular/forms';\r\nimport { GameService } from '../../core/services/game.service';\r\nimport { PickService } from '../../core/services/pick.service';\r\nimport { Game } from '../../core/models/game.model';\r\nimport { Pick } from '../../core/models/pick.model';\r\n\r\n@Component({\r\n  selector: 'app-picks',\r\n  standalone: true,\r\n  imports: [CommonModule, ReactiveFormsModule],\r\n  template: `\r\n    <div class=\"min-h-screen bg-gray-50\">\r\n      <!-- Navigation Header -->\r\n      <div class=\"bg-white shadow\">\r\n        <div class=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8\">\r\n          <div class=\"flex justify-between items-center py-6\">\r\n            <div>\r\n              <h1 class=\"text-3xl font-bold text-gray-900\">My Picks</h1>\r\n              <p class=\"mt-1 text-sm text-gray-500\">Week {{ currentWeek }}, {{ currentSeason }}</p>\r\n            </div>\r\n            <div class=\"text-right\">\r\n              <div class=\"text-2xl font-bold text-blue-600\">{{ picksSubmitted }}/{{ totalGames }}</div>\r\n              <div class=\"text-sm text-gray-500\">Picks Submitted</div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      <!-- Content -->\r\n      <div class=\"max-w-7xl mx-auto py-6 sm:px-6 lg:px-8\">\r\n        <div class=\"px-4 py-6 sm:px-0\">\r\n          \r\n          <!-- Loading State -->\r\n          <div *ngIf=\"loading\" class=\"text-center\">\r\n            <div class=\"inline-block animate-spin rounded-full h-8 w-8 border-b-2 border-blue-600\"></div>\r\n            <p class=\"mt-2 text-gray-600\">Loading games...</p>\r\n          </div>\r\n\r\n          <!-- Error State -->\r\n          <div *ngIf=\"error\" class=\"bg-red-50 border border-red-200 rounded-lg p-4 mb-6\">\r\n            <p class=\"text-red-800\">{{ error }}</p>\r\n            <button (click)=\"loadData()\" class=\"mt-2 btn-primary\">Try Again</button>\r\n          </div>\r\n\r\n          <!-- Games Grid -->\r\n          <div *ngIf=\"!loading && !error\" class=\"space-y-6\">\r\n            <!-- Instructions -->\r\n            <div class=\"bg-blue-50 border border-blue-200 rounded-lg p-4\">\r\n              <h3 class=\"font-semibold text-blue-900\">How to Make Picks</h3>\r\n              <ul class=\"mt-2 text-sm text-blue-800 space-y-1\">\r\n                <li>â€¢ Select the team you think will win each game</li>\r\n                <li>â€¢ Picks are locked once games start</li>\r\n                <li>â€¢ For Monday Night games, predict the total combined score</li>\r\n                <li>â€¢ Get all picks right for +3 bonus points!</li>\r\n              </ul>\r\n            </div>\r\n\r\n            <!-- Games -->\r\n            <form [formGroup]=\"picksForm\" (ngSubmit)=\"submitPicks()\">\r\n              <div class=\"grid gap-6 md:grid-cols-2 lg:grid-cols-3\">\r\n                <div *ngFor=\"let game of games\" class=\"card p-6\">\r\n                  <!-- Game Header -->\r\n                  <div class=\"text-center mb-4\">\r\n                    <div class=\"text-sm text-gray-500\">\r\n                      {{ formatGameTime(game.date) }}\r\n                    </div>\r\n                    <div *ngIf=\"isGameLocked(game)\" class=\"mt-1\">\r\n                      <span class=\"inline-flex items-center px-2 py-1 rounded-full text-xs font-medium bg-red-100 text-red-800\">\r\n                        ðŸ”’ Locked\r\n                      </span>\r\n                    </div>\r\n                    <div *ngIf=\"game.isMonday\" class=\"mt-1\">\r\n                      <span class=\"inline-flex items-center px-2 py-1 rounded-full text-xs font-medium bg-purple-100 text-purple-800\">\r\n                        Monday Night\r\n                      </span>\r\n                    </div>\r\n                  </div>\r\n\r\n                  <!-- Teams -->\r\n                  <div class=\"space-y-3\">\r\n                    <!-- Visitor Team -->\r\n                    <label class=\"flex items-center space-x-3 cursor-pointer p-2 rounded-lg hover:bg-gray-50\" \r\n                           [class.bg-blue-50]=\"getPickValue(game.id) === game.visitorTeam.id\"\r\n                           [class.border-2]=\"getPickValue(game.id) === game.visitorTeam.id\"\r\n                           [class.border-blue-500]=\"getPickValue(game.id) === game.visitorTeam.id\">\r\n                      <input\r\n                        type=\"radio\"\r\n                        [value]=\"game.visitorTeam.id\"\r\n                        [formControlName]=\"'pick_' + game.id\"\r\n                        [disabled]=\"isGameLocked(game)\"\r\n                        class=\"text-blue-600 focus:ring-blue-500\">\r\n                      <div class=\"flex items-center space-x-3 flex-1\">\r\n                        <img *ngIf=\"game.visitorTeam.logo\" \r\n                             [src]=\"game.visitorTeam.logo\" \r\n                             [alt]=\"game.visitorTeam.name\"\r\n                             class=\"w-8 h-8 object-contain\">\r\n                        <div class=\"flex-1\">\r\n                          <div class=\"font-medium\">{{ game.visitorTeam.city }} {{ game.visitorTeam.name }}</div>\r\n                          <div class=\"text-sm text-gray-500\">@ {{ game.homeTeam.abbreviation }}</div>\r\n                        </div>\r\n                        <div *ngIf=\"game.visitorTeam.score !== undefined\" class=\"text-lg font-bold\">\r\n                          {{ game.visitorTeam.score }}\r\n                        </div>\r\n                      </div>\r\n                    </label>\r\n\r\n                    <!-- Home Team -->\r\n                    <label class=\"flex items-center space-x-3 cursor-pointer p-2 rounded-lg hover:bg-gray-50\"\r\n                           [class.bg-blue-50]=\"getPickValue(game.id) === game.homeTeam.id\"\r\n                           [class.border-2]=\"getPickValue(game.id) === game.homeTeam.id\"\r\n                           [class.border-blue-500]=\"getPickValue(game.id) === game.homeTeam.id\">\r\n                      <input\r\n                        type=\"radio\"\r\n                        [value]=\"game.homeTeam.id\"\r\n                        [formControlName]=\"'pick_' + game.id\"\r\n                        [disabled]=\"isGameLocked(game)\"\r\n                        class=\"text-blue-600 focus:ring-blue-500\">\r\n                      <div class=\"flex items-center space-x-3 flex-1\">\r\n                        <img *ngIf=\"game.homeTeam.logo\" \r\n                             [src]=\"game.homeTeam.logo\" \r\n                             [alt]=\"game.homeTeam.name\"\r\n                             class=\"w-8 h-8 object-contain\">\r\n                        <div class=\"flex-1\">\r\n                          <div class=\"font-medium\">{{ game.homeTeam.city }} {{ game.homeTeam.name }}</div>\r\n                          <div class=\"text-sm text-gray-500\">vs {{ game.visitorTeam.abbreviation }}</div>\r\n                        </div>\r\n                        <div *ngIf=\"game.homeTeam.score !== undefined\" class=\"text-lg font-bold\">\r\n                          {{ game.homeTeam.score }}\r\n                        </div>\r\n                      </div>\r\n                    </label>\r\n                  </div>\r\n\r\n                  <!-- Monday Night Prediction -->\r\n                  <div *ngIf=\"game.isMonday\" class=\"mt-4 pt-4 border-t border-gray-200\">\r\n                    <label class=\"block text-sm font-medium text-gray-700 mb-2\">\r\n                      Total Score Prediction (Tie-breaker)\r\n                    </label>\r\n                    <input\r\n                      type=\"number\"\r\n                      [formControlName]=\"'monday_' + game.id\"\r\n                      [disabled]=\"isGameLocked(game)\"\r\n                      placeholder=\"e.g., 45\"\r\n                      min=\"0\"\r\n                      max=\"100\"\r\n                      class=\"input-field\">\r\n                  </div>\r\n\r\n                  <!-- Pick Status -->\r\n                  <div class=\"mt-4 text-center\">\r\n                    <div *ngIf=\"getPickValue(game.id)\" class=\"text-sm text-green-600\">\r\n                      âœ“ Pick submitted\r\n                    </div>\r\n                    <div *ngIf=\"!getPickValue(game.id) && !isGameLocked(game)\" class=\"text-sm text-gray-500\">\r\n                      Select a team\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n\r\n              <!-- Submit Button -->\r\n              <div class=\"mt-8 text-center\" *ngIf=\"!allGamesLocked()\">\r\n                <button\r\n                  type=\"submit\"\r\n                  [disabled]=\"submitting\"\r\n                  class=\"btn-primary px-8 py-3 text-lg\">\r\n                  {{ submitting ? 'Saving...' : 'Save Picks' }}\r\n                </button>\r\n                <p class=\"mt-2 text-sm text-gray-600\">\r\n                  Picks are automatically saved as you make them\r\n                </p>\r\n              </div>\r\n            </form>\r\n\r\n            <!-- All Games Locked Message -->\r\n            <div *ngIf=\"allGamesLocked()\" class=\"text-center py-8\">\r\n              <div class=\"text-6xl mb-4\">ðŸ”’</div>\r\n              <h3 class=\"text-lg font-medium text-gray-900\">All Games Have Started</h3>\r\n              <p class=\"text-gray-600\">Picks are now locked for this week</p>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  `,\r\n  styles: []\r\n})\r\nexport class PicksComponent implements OnInit {\r\n  private gameService = inject(GameService);\r\n  private pickService = inject(PickService);\r\n  private fb = inject(FormBuilder);\r\n\r\n  loading = true;\r\n  error = '';\r\n  submitting = false;\r\n  \r\n  games: Game[] = [];\r\n  picks: Pick[] = [];\r\n  currentWeek = 1;\r\n  currentSeason = new Date().getFullYear();\r\n  \r\n  picksForm: FormGroup = this.fb.group({});\r\n\r\n  get totalGames(): number {\r\n    return this.games.length;\r\n  }\r\n\r\n  get picksSubmitted(): number {\r\n    return this.games.filter(game => this.getPickValue(game.id)).length;\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.loadData();\r\n  }\r\n\r\n  loadData() {\r\n    this.loading = true;\r\n    this.error = '';\r\n\r\n    // Load current week games\r\n    this.gameService.getCurrentWeekGames().subscribe({\r\n      next: (response) => {\r\n        this.games = response.games;\r\n        this.currentWeek = response.week;\r\n        this.currentSeason = response.season;\r\n        \r\n        // Initialize form controls for each game\r\n        this.initializeFormControls();\r\n        \r\n        // Load existing picks\r\n        this.loadExistingPicks();\r\n      },\r\n      error: (error) => {\r\n        console.error('Error loading games:', error);\r\n        this.error = 'Failed to load games. Please try again.';\r\n        this.loading = false;\r\n      }\r\n    });\r\n  }\r\n\r\n  initializeFormControls() {\r\n    const controls: any = {};\r\n    \r\n    this.games.forEach(game => {\r\n      controls[`pick_${game.id}`] = [''];\r\n      if (game.isMonday) {\r\n        controls[`monday_${game.id}`] = [''];\r\n      }\r\n    });\r\n    \r\n    this.picksForm = this.fb.group(controls);\r\n    \r\n    // Auto-save on form changes\r\n    this.picksForm.valueChanges.subscribe(() => {\r\n      if (!this.loading) {\r\n        this.autoSavePicks();\r\n      }\r\n    });\r\n  }\r\n\r\n  loadExistingPicks() {\r\n    this.pickService.getUserPicks(this.currentWeek, this.currentSeason).subscribe({\r\n      next: (response) => {\r\n        this.picks = response.picks;\r\n        \r\n        // Populate form with existing picks\r\n        this.picks.forEach(pick => {\r\n          this.picksForm.patchValue({\r\n            [`pick_${pick.gameId}`]: pick.selectedTeamId,\r\n            [`monday_${pick.gameId}`]: pick.mondayNightPrediction || ''\r\n          });\r\n        });\r\n        \r\n        this.loading = false;\r\n      },\r\n      error: (error) => {\r\n        console.error('Error loading picks:', error);\r\n        this.loading = false;\r\n      }\r\n    });\r\n  }\r\n\r\n  getPickValue(gameId: number): number | null {\r\n    return this.picksForm.get(`pick_${gameId}`)?.value || null;\r\n  }\r\n\r\n  getMondayPrediction(gameId: number): number | null {\r\n    const value = this.picksForm.get(`monday_${gameId}`)?.value;\r\n    return value ? parseInt(value) : null;\r\n  }\r\n\r\n  isGameLocked(game: Game): boolean {\r\n    const gameTime = new Date(game.date);\r\n    const now = new Date();\r\n    return gameTime <= now || game.status !== 'scheduled';\r\n  }\r\n\r\n  allGamesLocked(): boolean {\r\n    return this.games.every(game => this.isGameLocked(game));\r\n  }\r\n\r\n  formatGameTime(dateString: string): string {\r\n    const date = new Date(dateString);\r\n    return date.toLocaleDateString('en-US', {\r\n      weekday: 'short',\r\n      month: 'short',\r\n      day: 'numeric',\r\n      hour: 'numeric',\r\n      minute: '2-digit',\r\n      timeZoneName: 'short'\r\n    });\r\n  }\r\n\r\n  autoSavePicks() {\r\n    // Save picks automatically with debounce\r\n    setTimeout(() => {\r\n      this.saveChangedPicks();\r\n    }, 1000);\r\n  }\r\n\r\n  saveChangedPicks() {\r\n    this.games.forEach(game => {\r\n      const selectedTeamId = this.getPickValue(game.id);\r\n      const mondayPrediction = this.getMondayPrediction(game.id);\r\n      \r\n      if (selectedTeamId && !this.isGameLocked(game)) {\r\n        const existingPick = this.picks.find(p => p.gameId === game.id);\r\n        \r\n        // Only save if changed or new\r\n        if (!existingPick || \r\n            existingPick.selectedTeamId !== selectedTeamId || \r\n            existingPick.mondayNightPrediction !== mondayPrediction) {\r\n          \r\n          this.pickService.submitPick({\r\n            gameId: game.id,\r\n            selectedTeamId: selectedTeamId,\r\n            mondayNightPrediction: mondayPrediction\r\n          }).subscribe({\r\n            next: () => {\r\n              // Update local picks array\r\n              const pickIndex = this.picks.findIndex(p => p.gameId === game.id);\r\n              if (pickIndex >= 0) {\r\n                this.picks[pickIndex].selectedTeamId = selectedTeamId;\r\n                this.picks[pickIndex].mondayNightPrediction = mondayPrediction;\r\n              } else {\r\n                this.picks.push({\r\n                  gameId: game.id,\r\n                  selectedTeamId: selectedTeamId,\r\n                  mondayNightPrediction: mondayPrediction\r\n                });\r\n              }\r\n            },\r\n            error: (error) => {\r\n              console.error('Error saving pick:', error);\r\n            }\r\n          });\r\n        }\r\n      }\r\n    });\r\n  }\r\n\r\n  submitPicks() {\r\n    this.submitting = true;\r\n    this.saveChangedPicks();\r\n    \r\n    // Show confirmation message\r\n    setTimeout(() => {\r\n      this.submitting = false;\r\n    }, 1000);\r\n  }\r\n}\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}