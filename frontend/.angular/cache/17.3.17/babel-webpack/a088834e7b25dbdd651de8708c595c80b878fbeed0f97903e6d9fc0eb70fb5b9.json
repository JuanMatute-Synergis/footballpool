{"ast":null,"code":"import { environment } from '../../../environments/environment';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class PickService {\n  constructor(http) {\n    this.http = http;\n  }\n  getUserPicks(week, season) {\n    const params = {};\n    if (week) params.week = week.toString();\n    if (season) params.season = season.toString();\n    return this.http.get(`${environment.apiUrl}/picks`, {\n      params\n    });\n  }\n  submitPick(pick) {\n    return this.http.post(`${environment.apiUrl}/picks`, pick);\n  }\n  getPicksForGame(gameId) {\n    return this.http.get(`${environment.apiUrl}/picks/game/${gameId}`);\n  }\n  getPicksHistory(limit = 10) {\n    return this.http.get(`${environment.apiUrl}/picks/history`, {\n      params: {\n        limit: limit.toString()\n      }\n    });\n  }\n  static {\n    this.ɵfac = function PickService_Factory(t) {\n      return new (t || PickService)(i0.ɵɵinject(i1.HttpClient));\n    };\n  }\n  static {\n    this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n      token: PickService,\n      factory: PickService.ɵfac,\n      providedIn: 'root'\n    });\n  }\n}","map":{"version":3,"names":["environment","PickService","constructor","http","getUserPicks","week","season","params","toString","get","apiUrl","submitPick","pick","post","getPicksForGame","gameId","getPicksHistory","limit","i0","ɵɵinject","i1","HttpClient","factory","ɵfac","providedIn"],"sources":["C:\\Users\\juanm\\source\\football_pool\\frontend\\src\\app\\core\\services\\pick.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\nimport { environment } from '../../../environments/environment';\r\nimport { \r\n  Pick, \r\n  PicksResponse, \r\n  SubmitPickRequest \r\n} from '../models/pick.model';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class PickService {\r\n  constructor(private http: HttpClient) {}\r\n\r\n  getUserPicks(week?: number, season?: number): Observable<PicksResponse> {\r\n    const params: any = {};\r\n    if (week) params.week = week.toString();\r\n    if (season) params.season = season.toString();\r\n\r\n    return this.http.get<PicksResponse>(`${environment.apiUrl}/picks`, { params });\r\n  }\r\n\r\n  submitPick(pick: SubmitPickRequest): Observable<{ message: string }> {\r\n    return this.http.post<{ message: string }>(`${environment.apiUrl}/picks`, pick);\r\n  }\r\n\r\n  getPicksForGame(gameId: number): Observable<{\r\n    gameId: number;\r\n    canSeeAllPicks: boolean;\r\n    picks: Array<{\r\n      userFirstName: string;\r\n      userLastName: string;\r\n      selectedTeamId: number;\r\n      selectedTeamName: string;\r\n      selectedTeamAbbreviation: string;\r\n      mondayNightPrediction?: number;\r\n    }>;\r\n  }> {\r\n    return this.http.get<any>(`${environment.apiUrl}/picks/game/${gameId}`);\r\n  }\r\n\r\n  getPicksHistory(limit = 10): Observable<{\r\n    history: Array<{\r\n      week: number;\r\n      season: number;\r\n      correctPicks: number;\r\n      totalPicks: number;\r\n      bonusPoints: number;\r\n      totalPoints: number;\r\n      mondayNightPrediction?: number;\r\n      mondayNightActual?: number;\r\n      mondayNightDiff?: number;\r\n      isPerfectWeek: boolean;\r\n    }>;\r\n  }> {\r\n    return this.http.get<any>(`${environment.apiUrl}/picks/history`, {\r\n      params: { limit: limit.toString() }\r\n    });\r\n  }\r\n}\r\n"],"mappings":"AAGA,SAASA,WAAW,QAAQ,mCAAmC;;;AAU/D,OAAM,MAAOC,WAAW;EACtBC,YAAoBC,IAAgB;IAAhB,KAAAA,IAAI,GAAJA,IAAI;EAAe;EAEvCC,YAAYA,CAACC,IAAa,EAAEC,MAAe;IACzC,MAAMC,MAAM,GAAQ,EAAE;IACtB,IAAIF,IAAI,EAAEE,MAAM,CAACF,IAAI,GAAGA,IAAI,CAACG,QAAQ,EAAE;IACvC,IAAIF,MAAM,EAAEC,MAAM,CAACD,MAAM,GAAGA,MAAM,CAACE,QAAQ,EAAE;IAE7C,OAAO,IAAI,CAACL,IAAI,CAACM,GAAG,CAAgB,GAAGT,WAAW,CAACU,MAAM,QAAQ,EAAE;MAAEH;IAAM,CAAE,CAAC;EAChF;EAEAI,UAAUA,CAACC,IAAuB;IAChC,OAAO,IAAI,CAACT,IAAI,CAACU,IAAI,CAAsB,GAAGb,WAAW,CAACU,MAAM,QAAQ,EAAEE,IAAI,CAAC;EACjF;EAEAE,eAAeA,CAACC,MAAc;IAY5B,OAAO,IAAI,CAACZ,IAAI,CAACM,GAAG,CAAM,GAAGT,WAAW,CAACU,MAAM,eAAeK,MAAM,EAAE,CAAC;EACzE;EAEAC,eAAeA,CAACC,KAAK,GAAG,EAAE;IAcxB,OAAO,IAAI,CAACd,IAAI,CAACM,GAAG,CAAM,GAAGT,WAAW,CAACU,MAAM,gBAAgB,EAAE;MAC/DH,MAAM,EAAE;QAAEU,KAAK,EAAEA,KAAK,CAACT,QAAQ;MAAE;KAClC,CAAC;EACJ;;;uBA/CWP,WAAW,EAAAiB,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,UAAA;IAAA;EAAA;;;aAAXpB,WAAW;MAAAqB,OAAA,EAAXrB,WAAW,CAAAsB,IAAA;MAAAC,UAAA,EAFV;IAAM;EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}