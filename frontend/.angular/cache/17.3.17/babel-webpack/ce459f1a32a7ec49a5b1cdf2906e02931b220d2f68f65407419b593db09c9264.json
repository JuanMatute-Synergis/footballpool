{"ast":null,"code":"import { inject } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormBuilder, ReactiveFormsModule, Validators } from '@angular/forms';\nimport { Router } from '@angular/router';\nimport { AuthService } from '../../core/services/auth.service';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common\";\nimport * as i2 from \"@angular/forms\";\nfunction AuthComponent_div_9_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 15)(1, \"div\")(2, \"label\", 16);\n    i0.ɵɵtext(3, \"First Name\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(4, \"input\", 17);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(5, \"div\")(6, \"label\", 18);\n    i0.ɵɵtext(7, \"Last Name\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(8, \"input\", 19);\n    i0.ɵɵelementEnd()();\n  }\n}\nfunction AuthComponent_div_18_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 20);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance();\n    i0.ɵɵtextInterpolate1(\" \", ctx_r0.error, \" \");\n  }\n}\nexport let AuthComponent = /*#__PURE__*/(() => {\n  class AuthComponent {\n    constructor() {\n      this.fb = inject(FormBuilder);\n      this.authService = inject(AuthService);\n      this.router = inject(Router);\n      this.isLogin = true;\n      this.loading = false;\n      this.error = '';\n      this.authForm = this.fb.group({\n        email: ['', [Validators.required, Validators.email]],\n        password: ['', [Validators.required, Validators.minLength(6)]],\n        firstName: [''],\n        lastName: ['']\n      });\n    }\n    ngOnInit() {\n      // Redirect if already authenticated\n      if (this.authService.isAuthenticated) {\n        this.router.navigate(['/dashboard']);\n      }\n      this.updateValidators();\n    }\n    toggleMode() {\n      this.isLogin = !this.isLogin;\n      this.error = '';\n      this.updateValidators();\n    }\n    updateValidators() {\n      const firstNameControl = this.authForm.get('firstName');\n      const lastNameControl = this.authForm.get('lastName');\n      if (this.isLogin) {\n        firstNameControl?.clearValidators();\n        lastNameControl?.clearValidators();\n      } else {\n        firstNameControl?.setValidators([Validators.required]);\n        lastNameControl?.setValidators([Validators.required]);\n      }\n      firstNameControl?.updateValueAndValidity();\n      lastNameControl?.updateValueAndValidity();\n    }\n    onSubmit() {\n      if (this.authForm.invalid) return;\n      this.loading = true;\n      this.error = '';\n      const formValue = this.authForm.value;\n      const request$ = this.isLogin ? this.authService.login({\n        email: formValue.email,\n        password: formValue.password\n      }) : this.authService.register({\n        email: formValue.email,\n        password: formValue.password,\n        firstName: formValue.firstName,\n        lastName: formValue.lastName\n      });\n      request$.subscribe({\n        next: () => {\n          this.router.navigate(['/dashboard']);\n        },\n        error: error => {\n          this.error = error.error?.message || 'Authentication failed';\n          this.loading = false;\n        }\n      });\n    }\n    static {\n      this.ɵfac = function AuthComponent_Factory(t) {\n        return new (t || AuthComponent)();\n      };\n    }\n    static {\n      this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n        type: AuthComponent,\n        selectors: [[\"app-auth\"]],\n        standalone: true,\n        features: [i0.ɵɵStandaloneFeature],\n        decls: 25,\n        vars: 7,\n        consts: [[1, \"min-h-screen\", \"flex\", \"items-center\", \"justify-center\", \"bg-gray-50\", \"py-12\", \"px-4\", \"sm:px-6\", \"lg:px-8\"], [1, \"max-w-md\", \"w-full\", \"space-y-8\"], [1, \"mt-6\", \"text-center\", \"text-3xl\", \"font-extrabold\", \"text-gray-900\"], [1, \"mt-2\", \"text-center\", \"text-sm\", \"text-gray-600\"], [1, \"mt-8\", \"space-y-6\", 3, \"ngSubmit\", \"formGroup\"], [1, \"space-y-4\"], [\"class\", \"grid grid-cols-2 gap-4\", 4, \"ngIf\"], [\"for\", \"email\", 1, \"sr-only\"], [\"id\", \"email\", \"name\", \"email\", \"type\", \"email\", \"formControlName\", \"email\", \"placeholder\", \"Email address\", 1, \"input-field\"], [\"for\", \"password\", 1, \"sr-only\"], [\"id\", \"password\", \"name\", \"password\", \"type\", \"password\", \"formControlName\", \"password\", \"placeholder\", \"Password\", 1, \"input-field\"], [\"class\", \"text-red-600 text-sm text-center\", 4, \"ngIf\"], [\"type\", \"submit\", 1, \"btn-primary\", \"w-full\", 3, \"disabled\"], [1, \"text-center\"], [\"type\", \"button\", 1, \"text-blue-600\", \"hover:text-blue-500\", 3, \"click\"], [1, \"grid\", \"grid-cols-2\", \"gap-4\"], [\"for\", \"firstName\", 1, \"sr-only\"], [\"id\", \"firstName\", \"name\", \"firstName\", \"type\", \"text\", \"formControlName\", \"firstName\", \"placeholder\", \"First Name\", 1, \"input-field\"], [\"for\", \"lastName\", 1, \"sr-only\"], [\"id\", \"lastName\", \"name\", \"lastName\", \"type\", \"text\", \"formControlName\", \"lastName\", \"placeholder\", \"Last Name\", 1, \"input-field\"], [1, \"text-red-600\", \"text-sm\", \"text-center\"]],\n        template: function AuthComponent_Template(rf, ctx) {\n          if (rf & 1) {\n            i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 1)(2, \"div\")(3, \"h2\", 2);\n            i0.ɵɵtext(4);\n            i0.ɵɵelementEnd();\n            i0.ɵɵelementStart(5, \"p\", 3);\n            i0.ɵɵtext(6, \" NFL Weekly Picks \");\n            i0.ɵɵelementEnd()();\n            i0.ɵɵelementStart(7, \"form\", 4);\n            i0.ɵɵlistener(\"ngSubmit\", function AuthComponent_Template_form_ngSubmit_7_listener() {\n              return ctx.onSubmit();\n            });\n            i0.ɵɵelementStart(8, \"div\", 5);\n            i0.ɵɵtemplate(9, AuthComponent_div_9_Template, 9, 0, \"div\", 6);\n            i0.ɵɵelementStart(10, \"div\")(11, \"label\", 7);\n            i0.ɵɵtext(12, \"Email address\");\n            i0.ɵɵelementEnd();\n            i0.ɵɵelement(13, \"input\", 8);\n            i0.ɵɵelementEnd();\n            i0.ɵɵelementStart(14, \"div\")(15, \"label\", 9);\n            i0.ɵɵtext(16, \"Password\");\n            i0.ɵɵelementEnd();\n            i0.ɵɵelement(17, \"input\", 10);\n            i0.ɵɵelementEnd()();\n            i0.ɵɵtemplate(18, AuthComponent_div_18_Template, 2, 1, \"div\", 11);\n            i0.ɵɵelementStart(19, \"div\")(20, \"button\", 12);\n            i0.ɵɵtext(21);\n            i0.ɵɵelementEnd()();\n            i0.ɵɵelementStart(22, \"div\", 13)(23, \"button\", 14);\n            i0.ɵɵlistener(\"click\", function AuthComponent_Template_button_click_23_listener() {\n              return ctx.toggleMode();\n            });\n            i0.ɵɵtext(24);\n            i0.ɵɵelementEnd()()()()();\n          }\n          if (rf & 2) {\n            i0.ɵɵadvance(4);\n            i0.ɵɵtextInterpolate1(\" \", ctx.isLogin ? \"Sign in to your account\" : \"Create your account\", \" \");\n            i0.ɵɵadvance(3);\n            i0.ɵɵproperty(\"formGroup\", ctx.authForm);\n            i0.ɵɵadvance(2);\n            i0.ɵɵproperty(\"ngIf\", !ctx.isLogin);\n            i0.ɵɵadvance(9);\n            i0.ɵɵproperty(\"ngIf\", ctx.error);\n            i0.ɵɵadvance(2);\n            i0.ɵɵproperty(\"disabled\", ctx.authForm.invalid || ctx.loading);\n            i0.ɵɵadvance();\n            i0.ɵɵtextInterpolate1(\" \", ctx.loading ? \"Loading...\" : ctx.isLogin ? \"Sign In\" : \"Sign Up\", \" \");\n            i0.ɵɵadvance(3);\n            i0.ɵɵtextInterpolate1(\" \", ctx.isLogin ? \"Need an account? Sign up\" : \"Already have an account? Sign in\", \" \");\n          }\n        },\n        dependencies: [CommonModule, i1.NgIf, ReactiveFormsModule, i2.ɵNgNoValidate, i2.DefaultValueAccessor, i2.NgControlStatus, i2.NgControlStatusGroup, i2.FormGroupDirective, i2.FormControlName],\n        encapsulation: 2\n      });\n    }\n  }\n  return AuthComponent;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}