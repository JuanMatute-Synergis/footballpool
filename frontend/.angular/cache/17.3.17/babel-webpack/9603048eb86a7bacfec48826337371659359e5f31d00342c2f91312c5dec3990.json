{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component, inject } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { Router } from '@angular/router';\nimport { AuthService } from '../../core/services/auth.service';\nimport { GameService } from '../../core/services/game.service';\nimport { PickService } from '../../core/services/pick.service';\nimport { LeaderboardService } from '../../core/services/leaderboard.service';\nlet DashboardComponent = class DashboardComponent {\n  constructor() {\n    this.authService = inject(AuthService);\n    this.router = inject(Router);\n    this.gameService = inject(GameService);\n    this.pickService = inject(PickService);\n    this.leaderboardService = inject(LeaderboardService);\n    this.loading = true;\n    this.error = '';\n    this.currentWeek = 1;\n    this.currentSeason = new Date().getFullYear();\n    // Stats\n    this.currentWeekPicks = 0;\n    this.seasonCorrect = 0;\n    this.seasonWrong = 0;\n    this.currentRank = 0;\n    this.totalPoints = 0;\n    // Games and picks\n    this.upcomingGames = [];\n    this.completedGames = [];\n    this.userPicks = [];\n    this.topPlayers = [];\n  }\n  get currentUser() {\n    return this.authService.currentUser;\n  }\n  get totalGames() {\n    return this.upcomingGames.length + this.completedGames.length;\n  }\n  get hasAllPicks() {\n    return this.currentWeekPicks >= this.upcomingGames.length;\n  }\n  get seasonPercentage() {\n    const total = this.seasonCorrect + this.seasonWrong;\n    return total > 0 ? (this.seasonCorrect / total * 100).toFixed(1) : '0.0';\n  }\n  ngOnInit() {\n    this.loadDashboardData();\n  }\n  loadDashboardData() {\n    this.loading = true;\n    this.error = '';\n    // Load current week games\n    this.gameService.getCurrentWeekGames().subscribe({\n      next: response => {\n        this.currentWeek = response.week;\n        this.upcomingGames = response.games.filter(g => g.status === 'scheduled');\n        this.completedGames = response.games.filter(g => g.status === 'final');\n        this.loadUserPicks();\n        this.loadLeaderboard();\n      },\n      error: error => {\n        console.error('Error loading games:', error);\n        this.error = 'Failed to load dashboard data';\n        this.loading = false;\n      }\n    });\n  }\n  loadUserPicks() {\n    if (!this.currentUser) return;\n    this.pickService.getUserPicks(this.currentWeek, this.currentSeason).subscribe({\n      next: response => {\n        this.userPicks = response.picks;\n        this.currentWeekPicks = this.userPicks.length;\n        this.calculateStats();\n      },\n      error: error => {\n        console.error('Error loading user picks:', error);\n        // Don't set loading to false here, let leaderboard complete\n      }\n    });\n  }\n  loadLeaderboard() {\n    this.leaderboardService.getWeeklyLeaderboard(this.currentWeek, this.currentSeason).subscribe({\n      next: response => {\n        this.topPlayers = response.leaderboard.slice(0, 5);\n        if (this.currentUser) {\n          const userEntry = response.leaderboard.find(entry => entry.userId === this.currentUser.id);\n          this.currentRank = userEntry?.rank || 0;\n          this.totalPoints = userEntry?.totalPoints || 0;\n        }\n        this.loading = false;\n      },\n      error: error => {\n        console.error('Error loading leaderboard:', error);\n        this.loading = false;\n      }\n    });\n  }\n  calculateStats() {\n    // Calculate season stats from picks\n    const correctPicks = this.userPicks.filter(pick => pick.isCorrect === true).length;\n    const incorrectPicks = this.userPicks.filter(pick => pick.isCorrect === false).length;\n    this.seasonCorrect = correctPicks;\n    this.seasonWrong = incorrectPicks;\n  }\n  formatGameTime(gameTime) {\n    const date = new Date(gameTime);\n    const now = new Date();\n    const diffHours = (date.getTime() - now.getTime()) / (1000 * 60 * 60);\n    if (diffHours < 24 && diffHours > 0) {\n      return `Today ${date.toLocaleTimeString('en-US', {\n        hour: 'numeric',\n        minute: '2-digit'\n      })}`;\n    }\n    return date.toLocaleDateString('en-US', {\n      weekday: 'short',\n      month: 'short',\n      day: 'numeric',\n      hour: 'numeric',\n      minute: '2-digit'\n    });\n  }\n  getPickStatus(gameId) {\n    const pick = this.userPicks.find(p => p.gameId === gameId);\n    return pick ? 'Picked' : 'Pending';\n  }\n  getPickStatusClass(gameId) {\n    const pick = this.userPicks.find(p => p.gameId === gameId);\n    return pick ? 'px-2 py-1 bg-green-100 text-green-800 rounded text-xs' : 'px-2 py-1 bg-red-100 text-red-800 rounded text-xs';\n  }\n  getPickResult(gameId) {\n    const pick = this.userPicks.find(p => p.gameId === gameId);\n    if (!pick) return 'No Pick';\n    if (pick.isCorrect === null) return 'Pending';\n    return pick.isCorrect ? '‚úì Correct' : '‚úó Wrong';\n  }\n  getResultClass(gameId) {\n    const pick = this.userPicks.find(p => p.gameId === gameId);\n    if (!pick || pick.isCorrect === null) return 'text-gray-500 text-xs';\n    return pick.isCorrect ? 'text-green-600 text-xs font-medium' : 'text-red-600 text-xs font-medium';\n  }\n  logout() {\n    this.authService.logout();\n    this.router.navigate(['/auth']);\n  }\n};\nDashboardComponent = __decorate([Component({\n  selector: 'app-dashboard',\n  standalone: true,\n  imports: [CommonModule],\n  template: `\n    <div class=\"min-h-screen bg-gray-50\">\n      <!-- Navigation -->\n      <nav class=\"bg-white shadow-sm border-b border-gray-200\">\n        <div class=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8\">\n          <div class=\"flex justify-between h-16\">\n            <div class=\"flex items-center\">\n              <h1 class=\"text-xl font-bold text-gray-900\">üèà NFL Weekly Picks</h1>\n            </div>\n            <div class=\"flex items-center space-x-4\">\n              <span class=\"text-gray-700\">\n                Welcome, {{ currentUser?.firstName }} {{ currentUser?.lastName }}!\n                <span *ngIf=\"currentUser?.isAdmin\" class=\"ml-2 bg-blue-100 text-blue-800 text-xs px-2 py-1 rounded\">Admin</span>\n              </span>\n              <button \n                (click)=\"logout()\"\n                class=\"text-gray-500 hover:text-gray-700\">\n                Logout\n              </button>\n            </div>\n          </div>\n        </div>\n      </nav>\n\n      <!-- Main Content -->\n      <div class=\"max-w-7xl mx-auto py-6 sm:px-6 lg:px-8\">\n        <div class=\"px-4 py-6 sm:px-0\">\n          \n          <!-- Loading -->\n          <div *ngIf=\"loading\" class=\"text-center py-8\">\n            <div class=\"inline-block animate-spin rounded-full h-8 w-8 border-b-2 border-blue-600\"></div>\n            <p class=\"mt-2 text-gray-600\">Loading your dashboard...</p>\n          </div>\n\n          <!-- Error -->\n          <div *ngIf=\"error\" class=\"bg-red-50 border border-red-200 rounded-lg p-4 mb-6\">\n            <p class=\"text-red-800\">{{ error }}</p>\n            <button (click)=\"loadDashboardData()\" class=\"mt-2 btn-primary\">Try Again</button>\n          </div>\n\n          <div *ngIf=\"!loading\" class=\"space-y-8\">\n            \n            <!-- Welcome Header -->\n            <div class=\"text-center\">\n              <h2 class=\"text-3xl font-extrabold text-gray-900 sm:text-4xl\">\n                Welcome back, {{ currentUser?.firstName }}!\n              </h2>\n              <p class=\"mt-4 text-xl text-gray-600\">\n                NFL Picks - Week {{ currentWeek }} of {{ currentSeason }}\n              </p>\n            </div>\n            \n            <!-- Quick Stats -->\n            <div class=\"grid grid-cols-1 gap-6 sm:grid-cols-2 lg:grid-cols-4\">\n              <div class=\"card p-6 text-center\">\n                <h3 class=\"text-lg font-medium text-gray-900\">Picks This Week</h3>\n                <p class=\"mt-2 text-3xl font-extrabold text-blue-600\">{{ currentWeekPicks }}</p>\n                <p class=\"mt-1 text-gray-500\">out of {{ totalGames }}</p>\n              </div>\n              \n              <div class=\"card p-6 text-center\">\n                <h3 class=\"text-lg font-medium text-gray-900\">Season Record</h3>\n                <p class=\"mt-2 text-3xl font-extrabold text-green-600\">{{ seasonCorrect }}-{{ seasonWrong }}</p>\n                <p class=\"mt-1 text-gray-500\">{{ seasonPercentage }}% correct</p>\n              </div>\n              \n              <div class=\"card p-6 text-center\">\n                <h3 class=\"text-lg font-medium text-gray-900\">Current Rank</h3>\n                <p class=\"mt-2 text-3xl font-extrabold text-purple-600\">#{{ currentRank || '-' }}</p>\n                <p class=\"mt-1 text-gray-500\">This week</p>\n              </div>\n\n              <div class=\"card p-6 text-center\">\n                <h3 class=\"text-lg font-medium text-gray-900\">Total Points</h3>\n                <p class=\"mt-2 text-3xl font-extrabold text-orange-600\">{{ totalPoints }}</p>\n                <p class=\"mt-1 text-gray-500\">Season total</p>\n              </div>\n            </div>\n\n            <!-- Quick Actions -->\n            <div class=\"grid grid-cols-1 gap-4 sm:grid-cols-2 lg:grid-cols-4\">\n              <button (click)=\"router.navigate(['/picks'])\" class=\"card p-6 text-center hover:shadow-lg transition-shadow cursor-pointer\">\n                <div class=\"text-3xl mb-2\">üèà</div>\n                <h4 class=\"font-medium\">{{ hasAllPicks ? 'View Picks' : 'Make Picks' }}</h4>\n                <p class=\"text-sm text-gray-600 mt-1\">\n                  {{ hasAllPicks ? 'Review your selections' : 'Pick winners for this week' }}\n                </p>\n              </button>\n              \n              <button (click)=\"router.navigate(['/leaderboard'])\" class=\"card p-4 text-center hover:shadow-lg transition-shadow cursor-pointer\">\n                <div class=\"text-3xl mb-2\">üèÜ</div>\n                <h4 class=\"font-medium\">Leaderboard</h4>\n                <p class=\"text-sm text-gray-600 mt-1\">See rankings and standings</p>\n              </button>\n              \n              <button (click)=\"router.navigate(['/results'])\" class=\"card p-4 text-center hover:shadow-lg transition-shadow cursor-pointer\">\n                <div class=\"text-3xl mb-2\">üìä</div>\n                <h4 class=\"font-medium\">Results</h4>\n                <p class=\"text-sm text-gray-600 mt-1\">View game outcomes</p>\n              </button>\n              \n              <button *ngIf=\"currentUser?.isAdmin\" (click)=\"router.navigate(['/admin'])\" class=\"card p-4 text-center hover:shadow-lg transition-shadow cursor-pointer\">\n                <div class=\"text-3xl mb-2\">‚öôÔ∏è</div>\n                <h4 class=\"font-medium\">Admin Panel</h4>\n                <p class=\"text-sm text-gray-600 mt-1\">Manage users and settings</p>\n              </button>\n            </div>\n\n            <!-- This Week's Games Preview -->\n            <div class=\"card\">\n              <div class=\"p-6 border-b\">\n                <div class=\"flex justify-between items-center\">\n                  <h3 class=\"text-lg font-semibold\">Week {{ currentWeek }} Games</h3>\n                  <span class=\"text-sm text-gray-600\">{{ completedGames }}/{{ totalGames }} completed</span>\n                </div>\n              </div>\n              \n              <div class=\"p-6\">\n                <div class=\"space-y-3\">\n                  <div *ngFor=\"let game of upcomingGames.slice(0, 3)\" \n                       class=\"flex items-center justify-between p-3 bg-gray-50 rounded-lg\">\n                    <div class=\"flex items-center space-x-3\">\n                      <div class=\"font-medium\">{{ game.visitorTeam.name }} @ {{ game.homeTeam.name }}</div>\n                      <div *ngIf=\"game.isMonday\" class=\"px-2 py-1 bg-yellow-100 text-yellow-800 rounded text-xs\">MNF</div>\n                    </div>\n                    <div class=\"flex items-center space-x-2\">\n                      <span class=\"text-sm text-gray-600\">{{ formatGameTime(game.date) }}</span>\n                      <span [class]=\"getPickStatusClass(game.id)\">{{ getPickStatus(game.id) }}</span>\n                    </div>\n                  </div>\n                  \n                  <div *ngIf=\"upcomingGames.length === 0\" class=\"text-center py-4 text-gray-500\">\n                    All games this week are completed\n                  </div>\n                  \n                  <div *ngIf=\"upcomingGames.length > 3\" class=\"text-center pt-2\">\n                    <button (click)=\"router.navigate(['/picks'])\" class=\"text-blue-600 hover:text-blue-800 text-sm\">\n                      View all {{ upcomingGames.length }} games ‚Üí\n                    </button>\n                  </div>\n                </div>\n              </div>\n            </div>\n\n            <div class=\"grid grid-cols-1 lg:grid-cols-2 gap-6\">\n              <!-- Recent Results -->\n              <div class=\"card\">\n                <div class=\"p-6 border-b\">\n                  <div class=\"flex justify-between items-center\">\n                    <h3 class=\"text-lg font-semibold\">Recent Results</h3>\n                    <button (click)=\"router.navigate(['/results'])\" class=\"text-blue-600 hover:text-blue-800 text-sm\">\n                      View All ‚Üí\n                    </button>\n                  </div>\n                </div>\n                \n                <div class=\"p-6\">\n                  <div class=\"space-y-3\">\n                    <div *ngFor=\"let game of completedGames.slice(0, 4)\" \n                         class=\"flex items-center justify-between\">\n                      <div class=\"text-sm\">{{ game.visitorTeam.name }} @ {{ game.homeTeam.name }}</div>\n                      <div class=\"text-right\">\n                        <div class=\"text-sm font-medium\">\n                          {{ game.visitorTeam.score || 0 }} - {{ game.homeTeam.score || 0 }}\n                        </div>\n                        <div [class]=\"getResultClass(game.id)\">{{ getPickResult(game.id) }}</div>\n                      </div>\n                    </div>\n                    \n                    <div *ngIf=\"completedGames.length === 0\" class=\"text-center py-4 text-gray-500\">\n                      No completed games yet this week\n                    </div>\n                  </div>\n                </div>\n              </div>\n\n              <!-- Top 5 Leaderboard -->\n              <div class=\"card\">\n                <div class=\"p-6 border-b\">\n                  <div class=\"flex justify-between items-center\">\n                    <h3 class=\"text-lg font-semibold\">Week {{ currentWeek }} Leaders</h3>\n                    <button (click)=\"router.navigate(['/leaderboard'])\" class=\"text-blue-600 hover:text-blue-800 text-sm\">\n                      View Full ‚Üí\n                    </button>\n                  </div>\n                </div>\n                \n                <div class=\"p-6\">\n                  <div class=\"space-y-3\">\n                    <div *ngFor=\"let entry of topPlayers; let i = index\" \n                         class=\"flex items-center justify-between\"\n                         [class]=\"entry.userId === currentUser?.id ? 'bg-blue-50 -mx-3 px-3 py-2 rounded' : ''\">\n                      <div class=\"flex items-center space-x-3\">\n                        <div class=\"text-lg\">\n                          {{ i === 0 ? 'ü•á' : i === 1 ? 'ü•à' : i === 2 ? 'ü•â' : (i + 1) }}\n                        </div>\n                        <div>\n                          <div class=\"font-medium\">\n                            {{ entry.firstName }} {{ entry.lastName }}\n                            <span *ngIf=\"entry.userId === currentUser?.id\" class=\"text-blue-600 text-sm\">(You)</span>\n                          </div>\n                          <div class=\"text-xs text-gray-500\">{{ entry.correctPicks }}/{{ entry.totalPicks }} correct</div>\n                        </div>\n                      </div>\n                      <div class=\"text-right\">\n                        <div class=\"font-bold\">{{ entry.totalPoints }}</div>\n                        <div class=\"text-xs text-gray-500\">points</div>\n                      </div>\n                    </div>\n                    \n                    <div *ngIf=\"topPlayers.length === 0\" class=\"text-center py-4 text-gray-500\">\n                      No rankings available yet\n                    </div>\n                  </div>\n                </div>\n              </div>\n            </div>\n\n            <!-- App Status -->\n            <div class=\"card p-6 text-center bg-gradient-to-r from-green-50 to-blue-50 border-green-200\">\n              <p class=\"text-green-800 font-medium mb-2\">üéâ Your NFL Weekly Picks application is fully operational!</p>\n              <p class=\"text-sm text-green-700\">\n                All features are working: Authentication, Picks, Leaderboards, Results, and Admin Panel\n              </p>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  `,\n  styles: []\n})], DashboardComponent);\nexport { DashboardComponent };","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}